-- Query 1: Retrieve the names of all people who attended events at a branch but did not reserve rooms at that branch
ATTENDED_EVENTS ← Customer ⋈ (customerId = CID) Attends;
RESERVED_ROOMS  ← Customer ⋈ (customerId = CID, BID = BID) Room;
DIFFERENCE      ← ATTENDED_EVENTS - RESERVED_ROOMS;
RESULT          ← π (fName, lName) DIFFERENCE;

-- Query 2: Select names of customers who have both reserved a room for an event and for stay
CUSTOMER_ROOM  ← Customer ⋈ (customerId = CID) Room;
CUSTOMER_EVENT ← Customer ⋈ (customerId = CID) Reserves_For_Event;
RESULT         ← π (fName, lName) CUSTOMER_ROOM ∩ CUSTOMER_EVENT

-- Query 3: Select number, id, and address of branch and amount of people currently staying at that branch
BRANCH_CUSTOMER ← Branch ⋈ (branchId = BID) Customer;
AGGREGATE       ← (branchId, address, phoneNo) Ƒ (count customerId) BRANCH_CUSTOMER;
TO_RENAME       ← π (branchId, phoneNo, address, count_customerId) AGGREGATE;
RESULT          ← ρ (branchId, phoneNo, address, count) TO_RENAME;

-- Query 4: Names of customers who have attended a specific event
CUSTOMER_ATTENDS        ← Customer ⋈ (customerId = CID) Attends;
CUSTOMER_ATTENDS_EVENT  ← Event    ⋈ (eventId = EID)    CUSTOMER_ATTENDS;
SPECIFIC_EVENT          ← σ (name = 'Tech Expo') CUSTOMER_ATTENDS_EVENT;
RESULT                  ← π (fName, lName) SPECIFIC_EVENT;

-- Query 5: Retrieve the name and number of branch and total purchase cost for the past 1000 days
FOOD             ← π (BID, purchaseDate, invoice) Purchases_Food;
SUPPLY           ← π (BID, purchaseDate, invoice) Purchases_Supply;
VEHICLE          ← π (BID, purchaseDate, invoice) Purchases_Vehicle;
PURCHASES        ← FOOD ∪ SUPPLY ∪ VEHICLE;
BRANCH_PURCHASES ← Branch ⋈ (branchId = BID) PURCHASES;

PAST_1000        ← σ (purchaseDate > dateAdd(day, -1000, getDate())) BRANCH_PURCHASES;
AGGREGATE        ← (branchId, phoneNo) Ƒ (sum invoice) PAST_1000;
TO_RENAME        ← π (branchId, phoneNo, sum_invoice) AGGREGATE;
RESULT           ← ρ (branchId, phoneNo, sum) TO_RENAME;

-- Query 6: Retrieve the branch ID's of branches that have room types of donald or baller
BRANCH_ROOM_1      ← Branch    ⋈ (branchId = BID) Room;
BRANCH_ROOM_TYPE_1 ← Room_Type ⋈ (RTName = name)  BRANCH_ROOM_1;
SPECIFIC_EVENT_1   ← σ (name = 'donald') BRANCH_ROOM_TYPE_1;
RESULT_1           ← π (branchId) SPECIFIC_EVENT_1;

BRANCH_ROOM_2      ← Branch    ⋈ (branchId = BID) Room;
BRANCH_ROOM_TYPE_2 ← Room_Type ⋈ (RTName = name)  BRANCH_ROOM_2;
SPECIFIC_EVENT_2   ← σ (name = 'baller') BRANCH_ROOM_TYPE_2;
RESULT_2           ← π (branchId) SPECIFIC_EVENT_2;

FINAL_RESULT       ← RESULT_1 ∪ RESULT_2
